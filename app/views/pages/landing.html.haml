= content_for :page_lead do
  .jumbotron.jumbotron-fancy
    .container
      .row
        .col-sm-8
          %h1 SAP Converged Cloud
          %p From Playground to Production on one Infrastructure-as-a-Service (IaaS), powered by OpenStack, SAP HANA and Monsoon Automation
          = link_to "Enter the cloud", plugin('identity').domain_path(project_id:nil), class: "btn btn-outline-negative btn-lg"
        .col-sm-4
          %span.moo-cloud-white
          -# .row
          -#   .col-sm-6.hero-info
          -#     .info-stat
          -#       21.164
          -#     .info-stat-text
          -#       virtual machines
          -#   .col-sm-6.hero-info
          -#     .info-stat
          -#       3,7 PB
          -#     .info-stat-text
          -#       storage
          -#
          -# .row
          -#   .col-sm-6.hero-info
          -#     .info-stat
          -#       13
          -#     .info-stat-text
          -#       regions
          -#   .col-sm-6.hero-info
          -#     .info-stat
          -#       73
          -#     .info-stat-text
          -#       networks


%h1.page-header Converged Cloud Is Available In These Regions

#worldmap

%h1.page-header Our Services


%ul.fancy-list.fancy-list-2col
  %li
    .fancy-icon
      %span.moo-cloud
    %h5.fancy-header Compute & Block Storage
    %ul.content-list
      %li Create virtual machines with up to 512 GB RAM on vmware.
      %li Create volumes, attach them to vms and take snapshots.

  %li
    .fancy-icon
      %span.fa.fa-sitemap.fa-fw
    %h5.fancy-header Networking & Load Balancing
    %ul.content-list
      %li Manage networks, routers, floating IPs & Loadbalancers backed by hardware.
      %li Implement security groups backed by hypervisors and switches.
      %li get all the benefits from SDN but hardened in proven vendor technology from Cisco, Arista & vmware.



  %li
    .fancy-icon
      %span.fa.fa-database.fa-fw
    %h5.fancy-header Additional Storage Types & Software Repositories
    %ul.content-list
      %li Low-cost shared object storage.
      %li NFS file system storage as service.
      %li Consume Windows update services & linux repos around the globe.

  %li
    .fancy-icon
      %span.fa.fa-lock.fa-fw
    %h5.fancy-header Access Management & Auditing
    %ul.content-list
      %li Manage authorizations
      %li Delegate administrative rights to central operators.
      %li Use Cloud Access Manager (CAM).
      %li Keep an audit trail for your project services.

  %li
    .fancy-icon
      %span.fa.fa-gears.fa-fw
    %h5.fancy-header Monsoon Automation (IaC)
    %ul.content-list
      %li Execute ad-hoc jobs and defined runlists using scripts & Chef.
      %li Integrate your own servers or clients.
      %li Consume & publish containers from our private docker repository.


  %li
    .fancy-icon
      %span.fa.fa-code.fa-fw
    %h5.fancy-header API Access & Tested Tool Belt
    %ul.content-list
      %li Download the tested SDKs for your preferred language
      %li Consume the supported API documentation.
      %li Use our webClI to interact with openstack without local installation just from the browser.

  %li
    .fancy-icon
      %span.fa.fa-area-chart.fa-fw
    %h5.fancy-header  Monitoring, Logging, Cost & Capacity Control
    %ul.content-list
      %li Manage your quotas, monitor consumption & cost.
      %li Consume metrics and configure your own metrics and alarms.
      %li Forward logs to make them accessible to your operator's dashboard.

  %li
    .fancy-icon
      %span.fa.fa-hdd-o.fa-fw
    %h5.fancy-header Bare Metal Data Processing & HANA
    %ul.content-list
      %li Setup HANA databases on bare metal using HANA cloud cells.


  %li
    .fancy-icon
      %span.fa.fa-globe.fa-fw
    %h5.fancy-header Global distribution
    %ul.content-list
      %li Choose the region where you want to deploy your VMs: Europe, Russia, US-East, US-West, Canada, Brazil, Japan, China, Australia

  %li
    .fancy-icon
      %span.fa.fa-map-signs.fa-fw
    %h5.fancy-header DNS
    %ul.content-list
      %li Manage your own domains
      %li Allow your customers to bring their own domain.

  %li
    .fancy-icon
      %span.fa.fa-archive.fa-fw
    %h5.fancy-header OS Images
    %ul.content-list
      %li Choose from CoreOS, Debian, RHEL, SAP Suse, Suse, Ubuntu or Windows flavors.
      %li Create your own private images.



:javascript
  //Map dimensions (in pixels)
  var width = 1140,
      height = 580;

  //Map projection
  var projection = d3.geo.miller()
      .scale(174.38214717143913)
      .center([-0.0018057527730042117,25]) //projection center
      .translate([width/2,height/2]) //translate to center the map in view

  //Generate paths based on projection
  var path = d3.geo.path()
      .projection(projection);

  //Create an SVG
  var svg = d3.select("#worldmap")
      .append("svg")
      .attr("width", width)
      .attr("height", height)
      .on("click", clickedWorldMap);

  var tip = d3.tip()
      .attr('class', 'd3-tip')
      .offset([-10, 0])
      .html(function(d) {
        var selectedRegionText = isActiveCity(d) ? "Active Region" : "";

        var comingSoonText = d.available ? "" : "Planned for " + d.date;

        return "<strong>Region:</strong> " + d.regionname + "<br />" +
               "<span class='d3-tip-info'>" + d.city + ", " + d.country + "</span><br />" +
               "<span class='d3-tip-highlight'>" + selectedRegionText + "</span>" +
               "<span class='d3-tip-highlight-secondary'>" + comingSoonText + "</span>";
      })

  // add tooltip
  svg.call(tip);

  // shorthand
  var g = svg.append("g");

  //Group for the map features
  var features = g
      .attr("class","features");

  // Get correct regions config file (depending on landscape)
  var regions_config = "/regions_#{ENV['LANDSCAPE'] || 'development' }.json"

  d3.json("/world_countries.topojson", function(error,geodata) {
    if (error) return console.log(error); //unknown error, check the console

    //Create a path for each map feature in the data
    features.selectAll("path")
      .data(topojson.feature(geodata,geodata.objects.subunits).features) //generate features from TopoJSON
      .enter()
      .append("path")
      .attr("d",path);

    // Render circles for cities
    d3.json(regions_config, function(error, data) {
        g.selectAll("circle")
          .data(data)
          .enter()
          .append("circle")
          .attr("cx", function(d) {
                return projection([d.lon, d.lat])[0];
          })
          .attr("cy", function(d) {
                return projection([d.lon, d.lat])[1];
          })
          .attr("r", getRadius)
          .classed({'worldmap-city': true, 'active': isActiveCity, 'notavailable': isNotAvailable, 'cominglater': isComingLater})
          .each(showTip)
          .on("click",clickedCity)
          .on("mouseover", mouseoverCity)
          .on("mouseout", mouseoutCity);
     });

  });

  function showTip(d,i) {

    if (!isActiveCity(d)) {

      var thisNode = d3.select(this).node();

      var matrix = thisNode.getScreenCTM()
                .translate( thisNode.getAttribute("cx"),
                            thisNode.getAttribute("cy"));

      var tipContent = "<strong>Region:</strong> " + d.regionname + "<br />" +
             "<span class='d3-tip-info'>" + d.city + ", " + d.country + "</span><br />" +
             "<span class='d3-tip-highlight'>Active Region</span>"

      var div = d3.select("body")
        	.append("div")  // declare the tooltip div
          	.attr("class", "d3-tip n d3-tip-active")
            .style({position: "absolute"})
            .html(tipContent)
            .style("left", function (d) {
                var tipWidth = this.getBoundingClientRect().width;
                var computedLeft = window.pageXOffset + matrix.e - tipWidth/2;
                return  computedLeft + "px";
              })
            .style("top", function (d) {
                var tipHeight = this.getBoundingClientRect().height;
                var computedTop = window.pageYOffset + matrix.f - tipHeight - 18;
                return computedTop + "px";
              });
    }

  }


  // Add optional onClick events for features here
  // d.properties contains the attributes (e.g. d.properties.name, d.properties.population)
  function clickedCity(d,i) {
    if (d.available & !isActiveCity(d)) {
      d3.event.stopPropagation();
      var link = window.location.href.replace("#{current_region}", d.regionkey);
      showConfirm("Do you want to switch to region " + d.regionname + "?", link);
    }
  }

  function clickedWorldMap(d, i) {
    d3.selectAll(".d3-tip")
        .style({opacity: 0, "pointer-events": "none"});
  }


  // d.properties contains the attributes (e.g. d.properties.name, d.properties.population)
  function mouseoverCity(d,i) {
    d3.select(this).attr("r", 10);
    tip.show(d);
  }

  // Add optional onMouseover events for features here
  // d.properties contains the attributes (e.g. d.properties.name, d.properties.population)
  function mouseoutCity(d,i) {
    d3.select(this).attr("r", getRadius);
  }



  // Confirm dialog for region switch
  function showConfirm(text, link) {
    var html =  "<div id='confirm-region-change' class='modal fade' style='padding-top:15%; overflow-y:visible;'>" +
                  "<div class='modal-dialog'>" +
                    "<div class='modal-content'>" +
                       "<div class='modal-header'>" +
                         "<a class='close' data-dismiss='modal'>Ã—</a>" +
                         "<h4>" + text + "</h4>" +
                       "</div>" +
                       "<div class='modal-footer'>" +
                       "<a data-dismiss='modal' class='btn'>Cancel</a>" +
                       "<button data-dismiss='modal' class='btn btn-primary confirm'>Yes, switch region</button>" +
                     "</div>" +
                   "</div>" +
                 "</div>" +
               "</div>"

    $('#modal-holder').append(html);
    $('#confirm-region-change').modal('show');
    $('#confirm-region-change [data-dismiss="modal"].confirm').on('click', function (e) {
      window.location.assign(link);
    });

  }

  // Biggest radius for the active city, smaller radius for selectable cities, still smaller radius for future cities
  function getRadius(d,i) {
    var size = d.available ? 7 : 6;
    if (isActiveCity(d)) {size = size + 1};
    return size;
  }

  function isActiveCity(d,i) {
    return d.regionkey == "#{current_region}";
  }

  function isNotAvailable(d, i) {
    return !d.available;
  }

  // check how far in the future the planned date is
  function isComingLater(d, i) {
    var currentYear = new Date().getFullYear();
    // if not available and the planned availability year is not the current year return true
    return (!d.available && !d.date.includes(currentYear)) ? true : false;
  }
