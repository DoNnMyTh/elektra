- unless forms_credential.errors["message"].blank?
  %p.alert.alert-error= forms_credential.errors.full_messages.to_sentence

= simple_form_for forms_credential, url: credentials_path(@domain_id, format: :js), method: :post, remote: true do |f|
  - projects = services.identity.projects(@domain_id)
  
  %fieldset
    = f.input :type,
      collection:         Settings.credentials.types,
      as:                 :select,
      input_html:         { class: "dynamic-form-trigger" },
      include_blank:      "Select credential type"


  %fieldset.dynamic-form-target{class: ('visible' if forms_credential.type=='ec2'), data: {type: "ec2"}}
    - [:access, :secret].each do |field|
      = f.input field,
        label:              t("credentials.ec2.#{field}"),
        input_html:         { maxlength: 255, name: "#{f.object_name}[blob][#{field}]", value: forms_credential.blob.fetch(field.to_s,nil) },
        disabled:           forms_credential.type!="ec2" ,
        required:           true
      
    - project_options = forms_credential.type=="ec2" ? {} : {wrapper_error_class: "ignore_error", error: false}  
    = f.input :project_id, { label: "Project",
      as:                 :select,
      collection:         projects,
      include_blank:      "Choose a project",
      disabled:           forms_credential.type!="ec2",
      required:           true}.merge(project_options) 

  %fieldset.dynamic-form-target{class: ('visible' if forms_credential.type=='ssh-key'), data: {type: "ssh-key"}}
    = f.input :name,
      label:              t('credentials.ssh-key.name'),
      input_html:         { maxlength: 255, name: "#{f.object_name}[blob][name]", value: forms_credential.blob.fetch("name",nil) },
      disabled:           forms_credential.type!="ssh-key", 
      required:           true

    = f.input :public_key,
      as:                 :text,
      label:              t('credentials.ssh-key.public_key'),
      input_html:         { rows: 15, name: "#{f.object_name}[blob][public_key]", value: forms_credential.blob.fetch("public_key",nil) },
      disabled:           forms_credential.type!="ssh-key",
      required:           true 
      
    - project_options = forms_credential.type=="ssh-key" ? {} : {wrapper_error_class: "ignore_error", error: false}
    = f.input :project_id, project_options.merge({label: "Project",
      as:                   :select,
      collection:           projects,
      include_blank:        "Choose a project",
      disabled:             forms_credential.type!="ssh-key"})
      
