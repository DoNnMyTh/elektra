= simple_form_for @recordset, url: plugin('dns_service').zone_recordsets_path(@zone.id), method: :post, remote: request.xhr?, html: {data: {modal: true}, class: 'form-horizontal' }, wrapper: :horizontal_form do |f|

  %div{class: modal? ? 'modal-body' : ''}
    - if @recordset.errors.present?
      .alert.alert-error
        = render_errors(@recordset.errors)

    = f.input :type, required: true, as: :select, collection: DnsService::Recordset::TYPE_LABELS, input_html: { data: DnsService::Recordset::CONTENT_LABELS.merge(dynamic_label: '#recordset_records')}

    .form-group.string.recordset_name
      = label_tag :name, class: 'string col-sm-4 control-label' do
        Name
      .col-sm-8
        .input-group
          = f.text_field :name, id: "recordset-name-input", class: 'string required form-control', placeholder: "#{@zone.name}"
          %span.input-group-addon.zone-name-addon= ".#{@zone.name}"
        %p.help-block
          %i.fa.fa-info-circle
          You may leave the name field empty to create a record for the zone name itself

    - record_type = @recordset.type ? @recordset.type.to_sym : nil
    - label_values = DnsService::Recordset::CONTENT_LABELS.fetch(record_type,{})
    = f.input :records,
      label: label_values[:label] || 'Content',
      required: true,
      as: (label_values[:type]=='text' ? :text : :string),
      input_html: { value: (@recordset.records.is_a?(Array) ? @recordset.records.join(', ') : @recordset.records)},
      icon_hint: 'Multiple entries can be separated by commas.'

    = f.input :description, as: :text
    = f.input :ttl, input_html: {value: 1800}, as: :integer, icon_hint: 'TTL is the time-to-live for the record, in seconds.'

  %div.buttons{class: modal? ? 'modal-footer' : ''}
    - if modal?
      %button.btn.btn-default{type:"button", data: {dismiss:"modal"}, aria: {label: "Cancel"}} Cancel
    - else
      = link_to "Cancel", plugin('dns_service').zone_recordsets_path(@zone.id), class: 'btn btn-default'
    = button_tag "Create", { class: 'btn btn-primary pull-right', data: { disable_with: "Please wait..." } }
