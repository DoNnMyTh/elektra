= content_for :title do
  - if @object.clean_path.empty?
    Upload file
  - else
    Upload file to: #{@object.clean_path}

- pl = plugin('object_storage')

= simple_modal_form_for @form, submit_action: 'Upload', url: pl.create_object_path(@container_name, @object.path), method: :post, authenticity_token: true, cancel_url: pl.list_objects_path(@container_name, @object.path) do |f|
  %p.alert.alert-warning
    -# this limit is enforced by nginx, see http://nginx.org/en/docs/http/ngx_http_core_module.html#client_max_body_size
    This dialog only accepts files
    %strong smaller than 1 MiB.
    - if services.available?(:web_console)
      To upload larger files, please use a different client, such as the
      = succeed '.' do
        = link_to 'web console', plugin('webconsole').root_path, target: '_blank', id: 'linkto_webconsole'
    - else
      To upload larger files, please use a different client.

  - if @missing_file
    -# cannot show this as an error on the <input type="file"> since <input type="file"> apparently cannot display errors ¯\_(ツ)_/¯
    %p.alert.alert-error
      No file selected.

  %fieldset
    -# NOTE: <input type="file"> requires `authenticity_token: true` on the (simple_)form_for() to work
    = f.input :file, as: :file,   label: 'Select file', input_html: { autofocus: true }
    = f.input :name, as: :string, label: 'File name'

=content_for :javascripts do
  :javascript
    $('#linkto_webconsole').on('click', Dashboard.hideModal);

    //when a file has been selected, put its name into the filename input as a default
    $('#forms_create_object_file').on('change', function() {
      var file = this.files[0];
      if (file) {
        $('#forms_create_object_name').val(file.name);
      }
    });
