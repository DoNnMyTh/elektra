= content_for :title do
  Container: #{@container.name}

- pl = plugin('object_storage')

= simple_modal_form_for @container, 'Update container', url: pl.container_path(@container.name), method: :put, cancel_url: pl.containers_path do |f|
  %table.table
    %tbody
      %tr
        %th Object count
        %td= Core::DataType.new(:number).format(@container.object_count)
      - if has_capability?('container_quotas') 
        %tr
          %th.align-with-form-control Object count quota
          %td
            .row
              .col-md-6
                = f.input :object_count_quota, as: :integer, label: false, placeholder: 'Leave empty to disable'
      %tr
        %th Total size
        %td= format_bytes(@container.bytes_used)
      - if has_capability?('container_quotas') 
        %tr
          %th.align-with-form-control Total size quota
          %td
            .row
              .col-md-6
                - inital_value = nil
                - if @container.bytes_quota
                  - initial_value = Core::DataType.new(:bytes).format(@container.bytes_quota)
                - value = params.fetch(:container, {}).fetch(:bytes_quota, initial_value)
                = f.input :bytes_quota, as: :string, label: false, input_html: { value: value }, placeholder: 'Leave empty to disable'
      - if @container.allows_public_access?
        %tr
          %th URL for public access
          %td= @container.public_url
      - if has_capability?('staticweb') and @container.public_read_access?
        %th.align-with-form-control Static Web
        %td#container_static_web{class: @container.web_index.blank? ? 'collapsed' : ''}
          = f.input_field :has_web_index, as: :boolean, checked: @container.web_index.present?, class: 'feature-select'
          Serve objects as index
          %span.hide-when-collapsed with file name
          .row.hide-when-collapsed
            .col-md-6
              = f.input :web_index, as: :string, input_html: { value: @container.web_index || 'index.html' }, label: false
      %tr
        %th.align-with-form-control Object versioning
        %td#container_versions_location{ class: @container.versions_location.blank? ? 'collapsed' : '' }
          = f.input_field :has_versions_location, as: :boolean, checked: @container.versions_location.present?, class: 'feature-select'
          Store old object versions
          %span.hide-when-collapsed in container
          .row.hide-when-collapsed
            .col-md-6
              = f.input :versions_location, collection: @other_container_names, label: false, prompt: false
      %tr
        %th Metadata
        %td= render partial: 'editable_metadata_display', locals: { metadata: @container.metadata }

=content_for :javascripts do
  :javascript

    $('input.feature-select[type=checkbox]').change(function() {
      $(this).closest('td').toggleClass('collapsed', !$(this).is(':checked'));
    });

