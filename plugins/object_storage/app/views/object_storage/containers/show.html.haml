= content_for :title do
  Container: #{@container.name}

- pl = plugin('object_storage')

= simple_modal_form_for @container, 'Update container', url: pl.container_path(@container.name), method: :put, cancel_url: pl.containers_path do |f|
  %table.table
    %tbody
      %tr
        %th Object count
        %td= @container.object_count
      - if has_capability?('container_quotas') 
        %tr
          %th.align-with-form-control Object count quota
          %td
            .row
              .col-md-6
                = f.input :object_count_quota, as: :integer, label: false, placeholder: 'Leave empty to disable'
      %tr
        %th Total size
        %td= format_bytes(@container.bytes_used)
      - if has_capability?('container_quotas') 
        %tr
          %th.align-with-form-control Total size quota
          %td
            .row
              .col-md-6
                - inital_value = nil
                - if @container.bytes_quota
                  - initial_value = Core::DataType.new(:bytes).format(@container.bytes_quota)
                - value = params.fetch(:container, {}).fetch(:bytes_quota, initial_value)
                = f.input :bytes_quota, as: :string, label: false, input_html: { value: value }, placeholder: 'Leave empty to disable'
      %tr
        %th Metadata
        %td= render partial: 'editable_metadata_display', locals: { metadata: @container.metadata }

