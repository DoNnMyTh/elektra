= simple_form_for @form, url: plugin('object_storage').containers_path, method: :post, remote: request.xhr?, html: { data: { modal: true } } do |f|
  %div{class: modal? ? 'modal-body' : ''}
    - if @error
      %p.alert.alert-error= @error
    .row.quota-row
      .col-md-6
        %fieldset
          = f.input :name, label: 'Container Name'
      .col-md-6
        .bs-callout.bs-callout-primary
          %p
            %strong Description:
            A container provides a way for you to organize your data. You can think of a container as a folder in Windows or a directory in UNIX/LINUX. The primary difference between folders/directorys amd containers is, that containers cannot be nested. You can create an unlimited number of containers within your account. In any case data must be stored in a container so in the end you need to create a container prior to uploading data.
          
          %p
            %strong Naming: 
            The container name must be from 
            %strong 1 to 256 
            characters long and can start with any character and contain any pattern except the slash (
            %strong /
            ) character because this character delimits the container and object name.
          
          %p
            %strong Note: 
            A Public Container will allow anyone with the Public URL to gain access to your objects in the container.

    .buttons{class: modal? ? 'modal-footer' : ''}
      - if modal?
        %button.btn.btn-default{type:"button", data: { dismiss:"modal" }, aria: { label: "Cancel" }} Cancel
      - else
        = link_to "Cancel", data: {dismiss:"modal"}, class: 'btn btn-default'
      %button.btn.btn-primary{type: "submit", data: { disable_with: 'Please wait...'}} Create

