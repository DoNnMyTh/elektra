= content_for :title do
  Access Control for Container #{@container.name}

- pl = plugin('object_storage')

= simple_modal_form_for @container, 'Update Access', url: pl.update_access_control_container_path(@container.name), method: :post, cancel_url: pl.containers_path do |f|
  .row
    .col-md-6
      %table.table
        %tbody
          %tr
            %th Read ACLs
            %td
              = f.input :read_acl, as: :string, label: false, placeholder: 'Enter ACL here', readonly: @container.public_read_access?
              %p
                = f.input :public_read_access?, as: :boolean, label: 'Public Read Access'
          %tr
            %th Write ACLs
            %td
              = f.input :write_acl, as: :string, label: false, placeholder: 'Enter ACL here'
    .col-md-6
      .bs-callout.bs-callout-info
        %p
          ACL (access-control lists) are comma-separated.
          Use only project and user IDs without 
          = succeed '.' do
            %code AUTH_
          For granting acccess to a project use 
          = succeed '.' do
            %code PROJECT_ID:*
        %p 
          %dl
            %dt Grant Read and Write access: 
            %dd 
              %code USER1,USER2
          %dl
            %dt  Static Web access:
            %dd 
              %code .r:myproject.corp,example.com
              grants read access for these two Referer domains. To allow listing, add
              = succeed '.' do
                %code .rlistings

:javascript
  $('#container_public_read_access').change(
    function() {
      var input = $('#container_read_acl');
      if ($(this).is(":checked")) {
        input.data('org', input.val());
        input.val('.r:*,.rlistings');
        input.prop('readonly', true);
     }
       else {
        input.val(input.data('org'));
        input.prop('readonly', false);
      }
    }
  );

