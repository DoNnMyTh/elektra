= content_for :title do
  - if @object.is_directory?
    Directory: #{@object.path}
  - else
    File: #{@object.path}

- pl = plugin('object_storage')

= simple_modal_form_for @object, 'Update object', url: pl.update_object_path(@container_name, @object.path), method: :post, cancel_url: pl.list_objects_path(@container_name, @object.dirname) do |f|
  %table.table
    %tbody
      %tr
        %th Size
        %td= format_bytes(@object.size_bytes)
      %tr
        %th MD5 checksum
        %td= @object.md5_hash
      - if @container.allows_public_access? and has_capability?(:staticweb)
        %tr
          %th URL for public access
          %td= @object.public_url
      %tr
        %th Uploaded (UTC)
        %td= @object.created_at.to_time.getutc.strftime('%F %T')
      %tr
        %th Last modified (UTC)
        %td= @object.last_modified_at.to_time.getutc.strftime('%F %T')
      %tr
        %th.align-with-form-control Will be deleted (UTC)
        %td
          - initial_value = @object.expires_at.nil? ? '' : @object.expires_at.to_time.getutc.strftime('%F %T')
          - current_value = params.fetch(:object, {}).fetch(:expires_at, initial_value)
          - placeholder   = "Enter a timestamp like \"#{1.month.from_now.strftime('%F %T')}\" to enable automatic expiration"
          = f.input :expires_at, as: :string, label: false, input_html: { value: current_value, placeholder: placeholder }
      %tr
        %th.align-with-form-control Content type
        %td= f.input :content_type, as: :string, label: false
      %tr
        %th Metadata
        %td= render partial: 'editable_metadata_display', locals: { metadata: @object.metadata }
