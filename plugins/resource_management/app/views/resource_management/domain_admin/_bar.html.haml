- render_usage = false if !render_usage

- data_type                  = data[:domain_resource].attributes[:data_type]
- current_quota_sum          = data[:current_quota_sum]
- has_infinite_current_quota = data[:has_infinite_current_quota]
- approved_quota_for_domain  = data[:domain_resource].approved_quota
- usage_sum                  = data[:usage_sum]

-# to render the warning in good_to_know partial (TODO: breaks encapsulation)
- @warning = true if current_quota_sum > approved_quota_for_domain or has_infinite_current_quota

- fill = render_usage ? usage_sum : current_quota_sum

- if approved_quota_for_domain < 0
  -# special case if dpmain quota unlimited (that should never be the case ;-))
  = resource_bar( fill: fill, maximum: { value: -1, label: "No approved quota found" }, threshold: { value: fill, label: "Quota unlimited!" }, data_type: data_type )
- elsif has_infinite_current_quota
  -# one or more project quotas are unlimited (in that case the project admins are the bad guys)
  = resource_bar( fill: fill, maximum: { value: -1, label: "Quota currently unlimited" }, threshold: { value: approved_quota_for_domain, label: "Approved quota: $VALUE" }, data_type: data_type )
- elsif approved_quota_for_domain < fill
  -# special case where the project admins overrun the approved quotas for the domain
  = resource_bar(fill: fill, maximum: { value: fill, label: "" }, threshold: { value: approved_quota_for_domain, label: "Approved quota: $VALUE" }, data_type: data_type)
- else
  -# in this case everything is fine :-)
  = resource_bar(fill: fill, maximum: [fill,approved_quota_for_domain].max, threshold: { value: approved_quota_for_domain, label: "Approved quota: $VALUE" }, data_type: data_type)
