= content_for(:title, "Resource settings for project #{@project.name}")

=simple_form_for @project, url: plugin('resource_management').resources_save_settings_path(), method: :post, remote: request.xhr?, html: { data: { modal: true } } do |f|

  %div{class: modal? ? 'modal-body' : ''}

    - unless @project.errors.empty?
      %p.alert.alert-error= @project.errors.full_messages.to_sentence
    .row
      .col-sm-2
        = f.input :bursting_enabled,
          label: 'Bursting enabled',
          as: :radio_buttons,
          icon_hint:  "",
          wrapper_html: { style: "padding-left:20px" }
      .col-sm-10
        .bs-callout.bs-callout-primary
          %p
            If
            %strong Bursting
            is enabled it gives you the abillity to overshoot your usage over the given ressource quota by #{@project.bursting_multiplier*100}%. That will prevent you from the situation that you are stucked during installation or setup when you running out of resources. In other words you can try and than you know what you realy need and adjust the quota afterwards. This is a nice feature is it?
            %br
            %br
            But a
            %strong little warning
            on the end.
            Resources that are used in bursting mode are different charged than regular used resources withing your quota boundaries.

  .buttons{class: modal? ? 'modal-footer' : ''}
    - if modal?
      %button.btn.btn-default{type:"button", data: { dismiss:"modal" }, aria: { label: "Cancel" }} Cancel
    - else
      = link_to "Cancel", data: {dismiss:"modal"}, class: 'btn btn-default'
    %button.btn.btn-primary{type: "submit", data: { disable_with: 'Please wait...'}} Save
