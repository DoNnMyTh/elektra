= content_for :title do
  Review Request for more: #{t("resource_management.#{@resource.service}")} &gt; #{t("resource_management.#{@resource.name}")}

= simple_form_for @resource, url: plugin('resource_management').cloud_admin_approve_request_path, method: :post, remote: request.xhr?, html: { data: { modal: true } } do |f|
  =hidden_field_tag :inquiry_id, params[:inquiry_id]

  %div{class: modal? ? 'modal-body' : ''}
    #usage_bars
      = render partial: 'details_usage_bar'

    %p.help-block
      The domain
      %strong= @domain_name
      requests that their quota be extended from
      %strong= @resource.data_type.format(@resource.approved_quota)
      to
      = succeed '.' do
        %strong>= @resource.data_type.format(@desired_quota)
      This will increase quota usage to:

    .row
      .col-md-2.quota-label.text-muted Preview
      .col-md-9= render partial: 'bar', locals: { data: @cloud_status_new, render_quota: true }

    %fieldset
      - previous_value = params[:resource] ? params[:resource][:approved_quota] : nil
      - if @resource.data_type.to_sym == :number
        = f.input :approved_quota, label: 'New domain quota', input_html: { value: previous_value || @desired_quota }
      - else
        - requested_value = @resource.data_type.format(@desired_quota)
        = f.input :approved_quota, label: 'New domain quota', as: :string, input_html: { value: previous_value || requested_value }

      - previous_comment = params[:resource] ? params[:resource][:comment] : nil
      = f.input :comment, label: 'Comment', as: :string, input_html: { value: previous_comment, placeholder: 'Optional'}

  .buttons{class: modal? ? 'modal-footer' : ''}
    %button.btn.btn-default{type:"button", data: {dismiss:"modal"}, aria: {label: "Cancel"}} Cancel
    = f.submit 'Approve', class: 'btn btn-primary', data: { disable_with: "Please wait..." }
