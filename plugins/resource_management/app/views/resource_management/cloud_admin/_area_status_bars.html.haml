- @area_services.each do |service|
  - if @area != service
    %h3= t("resource_management.#{service}")
  - if @resource_status[service]
    - @resource_status[service].sort_by { |data| data[:capacity].resource }.each do |resource|
      = render partial: 'bar_row', locals: { overview: false,  data: resource, service: service }
  - else
    .bs-callout
      No #{t("resource_management.#{service}")} Quotas found!

-# commented out because For other non swift quotas the user acting as cloud admin would need an admin role in each and every domain
-# this is right now not possible so we don't want to roll out a feature now to production (in thant case for swift) and than take it 
-# away from the user. First we need more clarity here...
=render partial: 'data_age' #, locals: { sync_now_url: plugin('resource_management').cloud_admin_sync_now_url }


