%tr{id: "node_#{node.id}"}
  %td
    = link_to(node.name, plugin('automation').node_path(id: node.id), data: {modal: true})
  %td= "#{node.automation_facts.platform} #{node.automation_facts.platform_version}"

  %td.no-wrap
    -unless addresses.empty?
      - compute_ips(addresses)
    -else
      %i.fa.fa-desktop.fa-fw
      = node.automation_facts.ipaddress
      %span.info-text fixed
      %a{href:"#", data: {toggle:"popover", content: "Information retrieved from node facts.", "popover-type" => "table-info-hint"}}
        %i.fa.fa-info-circle.fa-fw

  %td
    - node_table_tags(node.tags)

  %td{class: "#{'automation_status_alarm' if node.automation_facts.online == false}"}
    = node.automation_facts.online_to_string

  %td.no-wrap
    = render partial: "table_nodes_item_jobs", locals: {jobs: jobs}
  %td.no-wrap
    %i.loading-spinner-section.hide{data: {node_id: node.id}}
    .btn-group{data: {node_id: node.id}}
      %button.btn.btn-default.btn-sm.dropdown-toggle{type: "button", data: {toggle: "dropdown"}, "aria-haspopup" => "true", "aria-expanded" => "false"}
        %i.fa.fa-gears.fa-fw
      %ul.dropdown-menu.dropdown-menu-right{ role:"menu"}
        %li.dropdown-header
          Run Automation
        - @automations.each do |automation|
          %li= link_to(automation.name, "#", data: {toggle: "run_automation_link", node_id: node.id, link: plugin('automation').run_automation_nodes_path(node_id: node.id, automation_id: automation.id, automation_name: automation.name) })

    = link_to plugin('automation').node_path(id: node.id), class: 'btn btn-default btn-sm', :method => 'delete', data: { confirm: "Are you sure you want to remove the node #{node.name}?", ok: "Yes, remove it", confirmed: :loading_status}, remote: true do
      %i.fa.fa-trash.fa-fw