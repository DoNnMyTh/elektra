#backend_error
= f.input :name, 
  input_html: { autofocus: true }
= f.input :description

- if edit
  = f.input :expression, 
    readonly: true,
    icon_hint: "#{link_to 'edit Expression', plugin('monitoring').edit_expression_alarm_definitions_path(expression: expression), class: 'btn btn-primary btn-xs pull-right', data: { modal_transition:true }} Metrics in the expression cannot be changed This is because the metrics is used to create Alarms and Alarms may already have been created"
- else
  = f.input :expression, 
    icon_hint: "If the expression is true, and the alarm actions are enabled and configured a notification will be sent. Refer to the #{link_to 'documentation', 'https://github.com/sapcc/monasca-api/blob/master/docs/monasca-api-spec.md#alarm-definition-expressions', target: '_blank'} for how to write an expression. <br><br> <span class='pull-right'>To create a valid expression you can also use a wizard. If you use the wizard please be aware that your filled out data is not saved for later!</span> #{link_to 'use Wizard', plugin('monitoring').create_expression_alarm_definitions_path(), class: 'btn btn-primary btn-xs pull-right', data: { modal_transition:true }}"

- severity = @alarm_definition.severity || 'LOW'
= f.input :severity, 
    collection: @alarm_definition.supported_severities, 
    selected: severity

-# https://github.com/openstack/monasca-api/blob/master/docs/monasca-api-spec.md#changing-alarm-definitions
- if edit
  = f.input :match_by, readonly: true,
      icon_hint: 'Cannot be changed because this field is used to create Alarms and Alarms may already have been created. The only option to change "match by" is to delete the existing Alarm Definition and create a new one.'
- else
  = f.input :match_by,
      label: 'Filter by',
      icon_hint: 'Comma-separated list of dimensions, A separate alarm will be created for every single dimension value.'

.row
  .col-md-8.col-md-offset-3
    = f.input :actions_enabled, as: :boolean, label: 'Send status notifications for:'
#alarm_actions
  = f.input :ok_actions, 
      label: 'OK',collection: @notification_methods.map{|s| [s.name, s.id]}, 
      input_html: { multiple: true, size: 3 }, 
      include_hidden: false 
  = f.input :alarm_actions, 
      label: 'Alarm',
      collection: @notification_methods.map{|s| [s.name, s.id]}, 
      input_html: { multiple: true, size: 3 }, 
      include_hidden: false 
  = f.input :undetermined_actions, 
      label: 'Undetermined',
      collection: @notification_methods.map{|s| [s.name, s.id]}, 
      input_html: { multiple: true, size: 3 }, 
      include_hidden: false 

= content_for :javascripts do
  :javascript
    $(function() {
      $('#alarm_actions').toggle($('#alarm_definition_actions_enabled').is(':checked'))
 
      $('#alarm_definition_actions_enabled').change(function(){
         $('#alarm_actions').toggle('fast');
      });
    });

