#backend_error
= f.input :name, 
  input_html: { autofocus: true }
= f.input :description, as: :text

= f.input :expression, readonly:true, as: :text

- severity = @alarm_definition.severity || 'LOW'
= f.input :severity, 
    collection: @alarm_definition.supported_severities, 
    selected: severity

= f.input :match_by, as: :hidden
- unless @filter_by.empty?
  .form-group
    .row
      = label_tag 'filter_by', 'Separate by', class: 'control-label col-sm-4'
      .col-sm-8.seperate-by
        - @filter_by.each do |dimensions_key|
          - if dimensions_key != ""
            = label_tag dimensions_key, dimensions_key.capitalize, class: 'filter-by-label'
            = check_box_tag dimensions_key, dimensions_key, false, class:'filter-by-input', onchange:'filter_by()'
        %p.help-block
          A separate alarm will be created for every distinct set of values in the chosen dimensions.

.row
  .col-md-8.col-md-offset-3
    = f.input :actions_enabled, as: :boolean, label: 'Send status notifications for:'

#alarm_actions
  .row
    .col-md-8.col-md-offset-4
      %p.help-block
        Note: to select or deselect multiple notification channels use strg + left mouse button  
  = f.input :ok_actions, 
      label: 'OK',collection: @notification_methods.map{|s| [s.name, s.id]}, 
      input_html: { multiple: true, size: 3 }, 
      include_hidden: false 
  = f.input :alarm_actions, 
      label: 'Alarm',
      collection: @notification_methods.map{|s| [s.name, s.id]}, 
      input_html: { multiple: true, size: 3 }, 
      include_hidden: false 
  = f.input :undetermined_actions, 
      label: 'Undetermined',
      collection: @notification_methods.map{|s| [s.name, s.id]}, 
      input_html: { multiple: true, size: 3 }, 
      include_hidden: false 

= content_for :javascripts do
  :javascript
    $(function() {
      $('#alarm_actions').toggle($('#alarm_definition_actions_enabled').is(':checked'))
 
      $('#alarm_definition_actions_enabled').change(function(){
         $('#alarm_actions').toggle('fast');
      });
    });

    function filter_by() {
      $('#alarm_definition_match_by').val('');
      var filter_by = "";
      $('.filter-by-input').each(function(index) {
        if($(this).prop('checked')) {
          filter_by += $(this).val()+",";
        }
      });
      // remove the last comma
      filter_by = filter_by.slice(0, -1);
      $('#alarm_definition_match_by').val(filter_by);
    }

