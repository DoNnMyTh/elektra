= content_for :title do
  Edit Expression

- unless modal?
  %h4 Edit Expression 

- if not @parsed_expression_success
  .modal-body
    = form_tag plugin('monitoring').from_expression_wizzard_edit_alarm_definitions_path(), method: :post, remote: modal?, id: 'expression_data'  do
      = hidden_field_tag 'id', @alarm_definition_id
      .form-group.period
        = label_tag 'expression', 'Expression', class: 'control-label'
        .row
          .col-md-12
            = text_field_tag 'expression', @expression, class: 'form-control'
            %span.help-block.parse-error{onclick: "$( '.parse-error-details' ).toggle('fast')"}
              Sorry! it was not possible to parse the given expression. Please do the adjustments by yourself. 
              = icon 'info-circle'
              Please be aware that it is not allowed to change Metrics in the expression! This is because the metric 
              is used to create Alarms and Alarms may already have been created
              .loading-place.loading-right
            %span.help-block.parse-error-details
              The parsed result is different to the given expression. This expression was probably not created with the expression wizard.
              %br
              given:
              %b=@expression
              %br
              parsed:
              %b=@parsed_expression
              %br
              %br
  .buttons{ class: modal? ? 'modal-footer' : '' }
    - unless modal?
      = link_to "Cancel", plugin('monitoring').alarm_definitions_path(), class: 'btn btn-default'
    %button.btn.btn-primary{ type: 'submit', form:'expression_data', id: 'alarm_definition_ready_btn' }
      Next
- else
  = form_tag plugin('monitoring').from_expression_wizzard_edit_alarm_definitions_path(), method: :post, remote: modal?, id: 'expression_data'  do
    = hidden_field_tag 'expression'
    = hidden_field_tag 'id', @alarm_definition_id
  
  -# this is to keep the information to generate the expression in the right way
  = text_field_tag 'metric', @metric, class: 'hide'
  = text_field_tag 'dimensions', @dimensions, class: 'hide'

  .modal-body
    %p.alert.alert-error.create-expression-error
    .row
      .col-md-12
        = label_tag 'expression_preview', 'Preview', class:'control-label'
        .panel.panel-default
          .panel-body.panel-expression
            .row
              .col-md-11
                .expression-preview#preview=@expression
              .col-md-1
                .loading-place.loading-right
    .row
      .col-md-6
        .form-group
          = label_tag 'statistical_function', 'Statistical Function', class: 'control-label'
          %select#statistical_function.form-control.selectpicker
            - ['avg','min','max','sum','count'].each do |statistical_function|
              - if @statistical_function == statistical_function
                %option{value: statistical_function, selected:true} #{statistical_function}
              - else
                %option{value: statistical_function} #{statistical_function}
        .form-group.period
          = label_tag 'period', 'Period', class: 'control-label'
          .row
            .col-md-3
              = text_field_tag 'period_custom', @period, class: 'form-control'
            .col-md-9.period-slider
              -# note: we need the style tag here to render the slide in correct size (css class is not working)
              = text_field_tag 'period_slider', nil, type: 'text', style: 'width:95%;' ,class: 'form-control', data: {period: @period}
          %span.help-block.period
            Period is the number of seconds for the measurement to be done on. It must be an integer multiple of 60. The default period is 60 seconds.
        .form-group.threshold
          .row  
            .col-md-4
              = label_tag 'threshold_relational_operator', 'Threshold', class: 'control-label'
              %select#threshold_relational_operator.form-control.selectpicker
                - ['<','>','<=','>='].each do |threshold|
                  - if @threshold == threshold
                    %option{value: threshold, selected:true} #{threshold}
                  - else
                    %option{value: threshold} #{threshold}
            .col-md-8
              = label_tag 'threshold_value', 'Value', class: 'control-label'
              = text_field_tag 'threshold_value', @threshold_value, class: 'form-control'
          %span.help-block.threshold
            Threshold values are always in the same units as the metric that they are being compared to.
      .col-md-6
        .row
          .col-md-12{style: 'padding-left:0px'}
            = label_tag 'statistic', 'Statistic', class: 'control-label'
            = link_to "Reload", '#', id: 'reload_statistic_btn', onclick:'show_statistic()', class: '%button btn btn-default btn-xs pull-right'
            %svg#statistic{style:"width:425px; height:225px;"}
            %span.help-block
              The graph shows the data points from the last 2 hours. Playing with the dimensions, statistical function and period should help you to find a good treshold value.
  .buttons{ class: modal? ? 'modal-footer' : '' }
    - unless modal?
      = link_to "Cancel", plugin('monitoring').alarm_definitions_path(), class: 'btn btn-default'
    %button.btn.btn-primary.hide-on-start{ type: 'submit', form:'expression_data', id: 'alarm_definition_ready_btn' }
      Next

  :javascript
    var metric_names;
    var wizard_mode = "edit";
    
    $(function(){
      $(".selectpicker").selectpicker({
        style: 'btn-default',
        dropupAuto: false,
        size: 5
      });
    })

  = render partial: 'expression_wizard_client_logic'

