= content_for :main_toolbar do
  Monitoring
= render partial: 'tabs', locals: { tab: 'overview' }

.overview
  .row
    .col-md-6
      %svg#state
    .col-md-6
      %svg#severity

:javascript
  // var dataset = #{@severity_pie_data.to_json};
  // monitoring.render_overview_pie(dataset);
    
  render_overview_pie('severity',#{@severity_pie_data.to_json});
  render_overview_pie('state',#{@state_pie_data.to_json});

  function render_overview_pie(TYPE,DATA,SIZE) {

    var width = SIZE || 400;
    var height = SIZE || 400;
  
    nv.addGraph( function() {
        var chart = nv.models.pieChart()
            .x(function(d) { return d.label })
            .y(function(d) { return d.count })
            .width(width)
            .height(height)
            .noData("There is no Data to display")
            .showLegend(true)
            .title(TYPE)
            .donut(true)
            .donutRatio(0.4)
            .showTooltipPercent(true);
  
        d3.select("#"+TYPE)
            .datum(DATA)
            .transition().duration(1200)
            .attr('width', width)
            .attr('height', height)
            .call(chart);
  
        // remove legend rendering otherwise it will collide with the click event
        chart.legend.dispatch.stateChange = function(newState){};
  
        // overwrite legend click
        // http://stackoverflow.com/questions/17598694/how-to-add-a-click-event-on-nvd3-js-graph
        chart.legend.dispatch.legendClick = function(d, i){
           //console.log(d.label);
           switch(d.label) {
             case "Low":
                //console.log("Low");
                window.location.replace("#{plugin('monitoring').alarms_path( severity: 'Low')}");
                break;
             case "Medium":
                //console.log("Medium");
                window.location.replace("#{plugin('monitoring').alarms_path( severity: 'Medium')}");
                break;
             case "High":
                //console.log("High");
                window.location.replace("#{plugin('monitoring').alarms_path( severity: 'High')}");
                break;
             case "Critical":
                //console.log("Critical");
                window.location.replace("#{plugin('monitoring').alarms_path( severity: 'Critical')}");
                break;
             case "Ok":
                //console.log("OK");
                window.location.replace("#{plugin('monitoring').alarms_path( state: 'OK')}");
                break;
             case "Alarm":
                //console.log("Alarm");
                window.location.replace("#{plugin('monitoring').alarms_path( state: 'Alarm')}");
                break;
             case "Undetermined":
                //console.log("Undetermined");
                window.location.replace("#{plugin('monitoring').alarms_path( state: 'Undetermined')}");
                break;
           }
        };
  
        return chart;
    } );

  }


